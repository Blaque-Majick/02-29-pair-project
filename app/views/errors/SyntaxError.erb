<h1>Syntax Error!</h1>

<p>This usually means that you added some extra character--or omitted some important character.</p>

<p>You might find this error is thrown when something remains unclosed:</p>

<pre><code>
  def calculate_bill(total, tip)
    total + tip  
</code></pre>

<p>The end is missing, so the code won't run; and Ruby will throw a SyntaxError because it cannot interpret that file correctly.</p>

<h2>Helpful Error Text</h2>

<p>
  Error occurred in File: <%=@error.get_processed_error_input["file"] %>
  <br>
  At line: <%=@error.get_processed_error_input["line"] %>
</p>

<h2>Beware Line Number Distractions</h2>

<p>Unfortunately, because syntax errors throw off Ruby's ability to understand the code at all, often the line numbers indicated in the error text are not correct.</p>

<h2>Solution</h2>

<p>You should open <strong><%= @error.get_processed_error_input["file"] %></strong> and carefully go through it, looking looking for the missing or extraneous character(s).</p>

<p>It can also be helpful to systematically comment out large chunks of code to narrow down which part of a file the error might be in. Whether this is more effective/efficient than simply scanning your code diligently depends on the particulars of the situation.</p>

<br><br>

<a href="/errors/new">Decode Another Error</a><br>

<a href="/">Home</a>